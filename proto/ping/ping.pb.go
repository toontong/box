// Code generated by protoc-gen-go.
// source: ping.proto
// DO NOT EDIT!

/*
Package ping is a generated protocol buffer package.

It is generated from these files:
	ping.proto

It has these top-level messages:
	MsgPing
	Pong
*/
package ping

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type MsgPing struct {
	Msg string `protobuf:"bytes,1,opt,name=Msg,json=msg" json:"Msg,omitempty"`
}

func (m *MsgPing) Reset()                    { *m = MsgPing{} }
func (m *MsgPing) String() string            { return proto.CompactTextString(m) }
func (*MsgPing) ProtoMessage()               {}
func (*MsgPing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Pong struct {
	Msg string `protobuf:"bytes,1,opt,name=Msg,json=msg" json:"Msg,omitempty"`
}

func (m *Pong) Reset()                    { *m = Pong{} }
func (m *Pong) String() string            { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()               {}
func (*Pong) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*MsgPing)(nil), "ping.MsgPing")
	proto.RegisterType((*Pong)(nil), "ping.Pong")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for PingService service

type PingServiceClient interface {
	Ping(ctx context.Context, in *MsgPing, opts ...grpc.CallOption) (*Pong, error)
}

type pingServiceClient struct {
	cc *grpc.ClientConn
}

func NewPingServiceClient(cc *grpc.ClientConn) PingServiceClient {
	return &pingServiceClient{cc}
}

func (c *pingServiceClient) Ping(ctx context.Context, in *MsgPing, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := grpc.Invoke(ctx, "/ping.PingService/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PingService service

type PingServiceServer interface {
	Ping(context.Context, *MsgPing) (*Pong, error)
}

func RegisterPingServiceServer(s *grpc.Server, srv PingServiceServer) {
	s.RegisterService(&_PingService_serviceDesc, srv)
}

func _PingService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(MsgPing)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(PingServiceServer).Ping(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _PingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ping.PingService",
	HandlerType: (*PingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _PingService_Ping_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xc8, 0xcc, 0x4b,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xa4, 0xb9, 0xd8, 0x7d, 0x8b,
	0xd3, 0x03, 0x80, 0x4c, 0x21, 0x01, 0x2e, 0x66, 0x20, 0x53, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33,
	0x88, 0x39, 0xb7, 0x38, 0x5d, 0x49, 0x82, 0x8b, 0x25, 0x20, 0x1f, 0x9b, 0x8c, 0x91, 0x11, 0x17,
	0x37, 0x48, 0x4f, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa, 0x90, 0x32, 0x50, 0x21, 0xc8, 0x08,
	0x5e, 0x3d, 0xb0, 0x05, 0x50, 0x13, 0xa5, 0xb8, 0x20, 0x5c, 0x90, 0x19, 0x4a, 0x0c, 0x4e, 0x32,
	0x5c, 0xfc, 0x99, 0xf9, 0x7a, 0x25, 0xf9, 0xf9, 0x79, 0x25, 0x40, 0x01, 0xbd, 0xa4, 0xfc, 0x0a,
	0x27, 0x76, 0xa7, 0xfc, 0x0a, 0x90, 0xca, 0x00, 0xc6, 0x24, 0x36, 0xb0, 0xab, 0x8c, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xb7, 0x7d, 0x73, 0x88, 0xa3, 0x00, 0x00, 0x00,
}
